4.a) Sa se interclaseze fara pastrarea dublurilor doua liste sortate.
b) Se da o lista eterogena, formata din numere intregi si liste de numere sortate. Sa se interclaseze fara pastrarea dublurilor toate sublistele. De ex :
[1, [2, 3], 4, 5, [1, 4, 6], 3, [1, 3, 7, 9, 10], 5, [1, 1, 11], 8] =>
[1, 2, 3, 4, 6, 7, 9, 10, 11].

a)
% Base Case: first list is empty
merge([], B, B).
% Base Case: second list is empty
merge(A, [], A).
% first element of A < first element of B -> first element(A) of the result list
merge([H1|T1], [H2|T2], [H1|Result]) :-
    H1 < H2,
    merge(T1, [H2|T2], Result).
% first element of A > first element of B -> first element(B) of the result list
merge([H1|T1], [H2|T2], [H2|Result]) :-
    H1 > H2,
    merge([H1|T1], T2, Result).
% H1==H2
merge([H1|T1], [H1|T2], [H1|Result]) :-
    merge(T1, T2, Result).

b)
%Base Case: empty list
merge_all([], []). 
merge_all([H|T], Result) :-
    is_list(H),              %if H is a list 
    merge_all(T, SubResult),  
    merge(H, SubResult, TempResult), 
    sort(TempResult, Result). 
merge_all([H|T], Result) :-
    \+ is_list(H),            %if H is not a list
    merge_all(T, SubResult),  
    merge([H], SubResult, TempResult), 
    sort(TempResult, Result). 
